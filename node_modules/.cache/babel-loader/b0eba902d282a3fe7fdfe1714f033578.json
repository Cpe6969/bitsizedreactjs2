{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Downloads\\\\W.A.S.D(Finish Project)\\\\frontend\\\\src\\\\screens\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addMessage } from '../actions/chatboxActions';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbox() {\n  _s();\n  const [message, setMessage] = useState('');\n  const dispatch = useDispatch();\n  const chatbox = useSelector(state => state.chatbox);\n  const {\n    messages\n  } = chatbox;\n  const socket = io('http://localhost:3000/#/chatbox'); // replace with your server URL\n\n  const userInfo = useSelector(state => state.userLogin.userInfo);\n  useEffect(() => {\n    // listen for incoming messages from the server\n    socket.on('message', message => {\n      dispatch(addMessage(message));\n    });\n\n    // load initial messages from the server\n    socket.emit('getMessages');\n    socket.on('messages', messages => {\n      dispatch(setMessages(messages));\n    });\n  }, [dispatch]);\n  const submitHandler = e => {\n    e.preventDefault();\n    socket.emit('message', {\n      name: userInfo.name,\n      text: message\n    });\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to join the chat.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: message.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \": \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"plmDFiLa7S6Pu4b4aVitVZelVfs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addMessage","io","jsxDEV","_jsxDEV","Chatbox","_s","message","setMessage","dispatch","chatbox","state","messages","socket","userInfo","userLogin","on","emit","setMessages","submitHandler","e","preventDefault","name","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","index","_c","$RefreshReg$"],"sources":["C:/Users/franc/Downloads/W.A.S.D(Finish Project)/frontend/src/screens/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMessage } from '../actions/chatboxActions';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nfunction Chatbox() {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const chatbox = useSelector(state => state.chatbox);\r\n  const { messages } = chatbox;\r\n  const socket = io('http://localhost:3000/#/chatbox'); // replace with your server URL\r\n\r\n  const userInfo = useSelector(state => state.userLogin.userInfo);\r\n\r\n  useEffect(() => {\r\n    // listen for incoming messages from the server\r\n    socket.on('message', (message) => {\r\n      dispatch(addMessage(message));\r\n    });\r\n\r\n    // load initial messages from the server\r\n    socket.emit('getMessages');\r\n    socket.on('messages', (messages) => {\r\n      dispatch(setMessages(messages));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('message', { name: userInfo.name, text: message });\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chatbox</h2>\r\n      {userInfo ? (\r\n        <form onSubmit={submitHandler}>\r\n          <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n      ) : (\r\n        <p>Please log in to join the chat.</p>\r\n      )}\r\n      <ul>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>\r\n            <strong>{message.name}</strong>: {message.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}