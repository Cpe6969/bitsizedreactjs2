{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\n// import Rating from '../components/Rating';\n// import Loader from '../components/Loader';\n// import Message from '../components/Message';\n// import { listNewsDetails } from '../actions/newsActions';\n// import { faHeart } from '@fortawesome/free-solid-svg-icons';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\n// import { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n// import { getUserDetails, updateUserProfile } from '../actions/userActions'\n// import { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n// import { listMyOrders } from '../actions/orderActions'\n// import { Dropdown } from 'react-bootstrap';\n// import { createPlaylist, deletePlaylist, listPlaylists } from '../actions/playlistActions';\n// import { useRef } from 'react';\n// import { createNewsReview } from '../actions/newsActions';\n// import { NEWS_CREATE_REVIEW_RESET } from '../constants/newsConstants';\n\n// function NewsScreen({ match, history}) {\n//   const { playlists } = useSelector((state) => state.playlistList);\n\n//   const [showDropdown, setShowDropdown] = useState(false);\n\n//   const [qty, setQty] = useState(1);\n//   const [liked, setLiked] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const newsDetails = useSelector(state => state.newsDetails);\n//   const {  newsitem, error, loading} = newsDetails;\n\n//   const [rating, setRating] = useState(0);\n//   const [comment, setComment] = useState('');\n//   const [wishlist, setWishlist] = useState([]);\n\n//   const newsReviewCreate = useSelector(state => state.newsReviewCreate);\n//   const {\n//     loading: loadingnewsReview,\n//     error: errornewsReview,\n//     success: successnewsReview,\n//   } = newsReviewCreate;\n\n//   useEffect(() => {\n//     if (successnewsReview) {\n//       setRating(0);\n//       setComment('');\n//       dispatch({ type: NEWS_CREATE_REVIEW_RESET });\n//     }\n\n//     dispatch(listNewsDetails(match.params.id));\n//   }, [dispatch, match, successnewsReview]);\n\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     dispatch(createNewsReview(\n//         match.params.id, {\n//         rating,\n//         comment\n//     }\n//     ));\n//   };\n\n//   useEffect(() => {\n//     dispatch(listNewsDetails(match.params.id));\n//   }, [dispatch, match]);\n\n//   const addToCartHandler = () => {\n//     history.push(`/cartnews/${match.params.id}?qty=${qty}`);\n//   };\n\n//   const addToWishlist = () => {\n//     history.push(`/liked/${match.params.id}?qty=${qty}`);\n//     setLiked(true); // Update the state to indicate that the user has liked the news\n\n//   };\n\n//   const addToPreorder = () => {\n//     history.push(`/playlist/${match.params.id}?qty=${qty}`);\n//   };\n\n//   const [showPremium, setShowPremium] = useState(false);\n//   // const [showBasic, setShowBasic] = useState(true);\n\n//   const [name, setName] = useState('')\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [confirmPassword, setConfirmPassword] = useState('')\n//     const [message, setMessage] = useState('')\n\n//     const userDetails = useSelector(state => state.userDetails)\n//     const { user } = userDetails\n\n//     const userLogin = useSelector(state => state.userLogin)\n//     const { userInfo } = userLogin\n\n//     const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n//     const { success } = userUpdateProfile\n\n//     const orderListMy = useSelector(state => state.orderListMy)\n//     const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n//     const [showDownload, setShowDownload] = useState(false)\n\n//     useEffect(() => {\n//         if (!userInfo) {\n//             history.push('/login')\n//         } else {\n//             if (!user || !user.name || success || userInfo._id !== user._id) {\n//                 dispatch({ type: USER_UPDATE_PROFILE_RESET })\n//                 dispatch(getUserDetails('profile'))\n//                 dispatch(listMyOrders())\n//             } else {\n//                 setName(user.name)\n//                 setEmail(user.email)\n//             }\n//         }\n//     }, [dispatch, history, userInfo, user, success])\n//     const handleDropdownToggle = () => {\n//       setShowDropdown(!showDropdown);\n//     };\n\n//     const addToPlaylist = (playlistId, playlistTitle) => {\n//       history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\n//     };\n//     const download = () => {\n//       window.location.href = newsitem.download;\n//     };\n\n//   return (\n//     <div>\n\n//       <Link to=\"/\" className=\"btn btn-light my-3\">\n//         Go Back\n//       </Link>\n//       {loading ? (\n//         <Loader />\n//      ) : error ? ( \n//         <Message variant=\"danger\">{error}</Message>\n//      ) : ( \n//         <div>\n//           <Row>\n//           <Col sm={12} md={6} lg={4} xl={6} className=\"home-screen-product-col\">\n\n//     <ListGroup>\n//       <Card>\n//         <ListGroup>\n//         <Image \n//   src={newsitem.image} \n//   alt={newsitem.headline} \n//   fluid \n//   className=\"float-md-end\" \n//   style={{ width: '1250px', height: '500px', objectFit: 'cover' }}\n// />        </ListGroup>\n//       </Card>\n\n//     </ListGroup>\n\n//       <br />\n//       <br />\n//       <Card>\n//         <ListGroup>\n\n// </ListGroup>\n// </Card>\n// </Col>\n// <Col md={6}>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <h1>{newsitem.headline}</h1>\n//                 </ListGroup.Item>\n\n//                 <ListGroup.Item>\n//                   Description: {newsitem.description}\n\n//                 </ListGroup.Item>\n\n//                 <ListGroup.Item>\n\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Col>\n\n//             <Col md={6}>\n//               <ListGroup >\n\n//          {loadingOrders ? (\n//   <Loader /> \n// ) : errorOrders ? ( \n//   <Message variant='danger'>{errorOrders}</Message> \n// ) : ( \n//   orders.map(order => (\n\n//     <div key={order.id}>\n\n//       <h2>\n//       {order.isPremium && order.isBought && (\n//           <div>\n\n// <ListGroup.Item>\n// <div >\n// <Card>\n\n//           <h2 className='text-center'> Comments</h2>\n//           {newsitem.reviews.length === 0 && <Message>No Comments</Message>}\n//           <ListGroup variant=\"flush\">\n//             {newsitem.reviews.map((review) => (\n//               <ListGroup.Item key={review._id}>\n//                 <h5>{review.name}</h5>\n//                 {/* <Rating value={review.rating} color={\"#f8e825\"} /> */}\n//                 <p>{review.createdAt.substring(0, 10)}</p>\n//                 <p>{review.comment}</p>\n//               </ListGroup.Item>\n//             ))}\n//             <ListGroup.Item>\n//               <h2>Write a Comment</h2>\n//               {successnewsReview && (\n//                 <Message variant=\"success\">\n//                   Comment submitted successfully\n//                 </Message>\n//               )}\n//               {loadingnewsReview && <Loader />}\n//               {errornewsReview && (\n//                 <Message variant=\"danger\">{errornewsReview}</Message>\n//               )}\n//               {userInfo ? (\n//                 <Form onSubmit={submitHandler}>\n//                   <Form.Group controlId=\"rating\">\n//                     {/* <Form.Label>Rating</Form.Label> */}\n//                     {/* <Form.Control\n//                       as=\"select\"\n//                       value={rating}\n//                       onChange={(e) => setRating(e.target.value)}\n//                     >\n//                       <option value=\"\">Select...</option>\n//                       <option value=\"1\">1 - Poor</option>\n//                       <option value=\"2\">2 - Fair</option>\n//                       <option value=\"3\">3 - Good</option>\n//                       <option value=\"4\">4 - Very Good</option>\n//                       <option value=\"5\">5 - Excellent</option>\n\n//                                                         </Form.Control> */}\n//                                                     </Form.Group>\n\n//                                                     <Form.Group controlId='comment'>\n//                                                         <Form.Label></Form.Label>\n//                                                         <Form.Control\n//                                                             as='textarea'\n//                                                             row='5'\n//                                                             value={comment}\n//                                                             onChange={(e) => setComment(e.target.value)}\n//                                                         ></Form.Control>\n//                                                     </Form.Group>\n\n//                                                     <Button\n//                                                         disabled={loadingnewsReview}\n//                                                         type='submit'\n//                                                         variant='primary'\n//                                                     >\n//                                                         Submit\n//                                                     </Button>\n\n//                                                 </Form>\n//                                             ) : (\n//                                                     <Message variant='info'>Please <Link to='/login'>login</Link> to write a comment</Message>\n//                                                 )}\n//                                         </ListGroup.Item>\n//                                     </ListGroup>\n\n//       </Card>\n// </div>\n\n//             </ListGroup.Item>\n\n//           </div>\n//         )}\n//       </h2>\n//     </div>\n//   ))\n\n// )}\n\n//             </ListGroup>\n\n//         </Col>\n//       </Row>\n//     </div>\n//    )} \n// </div>\n\n// );\n// }\n\n// export default NewsScreen;","map":{"version":3,"names":[],"sources":["C:/Users/franc/Downloads/BITE-SIZED/frontend/src/screens/NewsScreen.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\n// import { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\n// import Rating from '../components/Rating';\r\n// import Loader from '../components/Loader';\r\n// import Message from '../components/Message';\r\n// import { listNewsDetails } from '../actions/newsActions';\r\n// import { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\n// import { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n// import { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n// import { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n// import { listMyOrders } from '../actions/orderActions'\r\n// import { Dropdown } from 'react-bootstrap';\r\n// import { createPlaylist, deletePlaylist, listPlaylists } from '../actions/playlistActions';\r\n// import { useRef } from 'react';\r\n// import { createNewsReview } from '../actions/newsActions';\r\n// import { NEWS_CREATE_REVIEW_RESET } from '../constants/newsConstants';\r\n\r\n\r\n\r\n// function NewsScreen({ match, history}) {\r\n//   const { playlists } = useSelector((state) => state.playlistList);\r\n\r\n//   const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n//   const [qty, setQty] = useState(1);\r\n//   const [liked, setLiked] = useState(false);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const newsDetails = useSelector(state => state.newsDetails);\r\n//   const {  newsitem, error, loading} = newsDetails;\r\n\r\n\r\n\r\n//   const [rating, setRating] = useState(0);\r\n//   const [comment, setComment] = useState('');\r\n//   const [wishlist, setWishlist] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   const newsReviewCreate = useSelector(state => state.newsReviewCreate);\r\n//   const {\r\n//     loading: loadingnewsReview,\r\n//     error: errornewsReview,\r\n//     success: successnewsReview,\r\n//   } = newsReviewCreate;\r\n\r\n//   useEffect(() => {\r\n//     if (successnewsReview) {\r\n//       setRating(0);\r\n//       setComment('');\r\n//       dispatch({ type: NEWS_CREATE_REVIEW_RESET });\r\n//     }\r\n\r\n//     dispatch(listNewsDetails(match.params.id));\r\n//   }, [dispatch, match, successnewsReview]);\r\n\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(createNewsReview(\r\n//         match.params.id, {\r\n//         rating,\r\n//         comment\r\n//     }\r\n//     ));\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listNewsDetails(match.params.id));\r\n//   }, [dispatch, match]);\r\n\r\n//   const addToCartHandler = () => {\r\n//     history.push(`/cartnews/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n//   const addToWishlist = () => {\r\n//     history.push(`/liked/${match.params.id}?qty=${qty}`);\r\n//     setLiked(true); // Update the state to indicate that the user has liked the news\r\n\r\n//   };\r\n\r\n//   const addToPreorder = () => {\r\n//     history.push(`/playlist/${match.params.id}?qty=${qty}`);\r\n//   };\r\n\r\n\r\n//   const [showPremium, setShowPremium] = useState(false);\r\n//   // const [showBasic, setShowBasic] = useState(true);\r\n\r\n//   const [name, setName] = useState('')\r\n//     const [email, setEmail] = useState('')\r\n//     const [password, setPassword] = useState('')\r\n//     const [confirmPassword, setConfirmPassword] = useState('')\r\n//     const [message, setMessage] = useState('')\r\n\r\n\r\n//     const userDetails = useSelector(state => state.userDetails)\r\n//     const { user } = userDetails\r\n\r\n//     const userLogin = useSelector(state => state.userLogin)\r\n//     const { userInfo } = userLogin\r\n\r\n//     const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n//     const { success } = userUpdateProfile\r\n\r\n//     const orderListMy = useSelector(state => state.orderListMy)\r\n//     const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n//     const [showDownload, setShowDownload] = useState(false)\r\n\r\n//     useEffect(() => {\r\n//         if (!userInfo) {\r\n//             history.push('/login')\r\n//         } else {\r\n//             if (!user || !user.name || success || userInfo._id !== user._id) {\r\n//                 dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n//                 dispatch(getUserDetails('profile'))\r\n//                 dispatch(listMyOrders())\r\n//             } else {\r\n//                 setName(user.name)\r\n//                 setEmail(user.email)\r\n//             }\r\n//         }\r\n//     }, [dispatch, history, userInfo, user, success])\r\n//     const handleDropdownToggle = () => {\r\n//       setShowDropdown(!showDropdown);\r\n//     };\r\n\r\n//     const addToPlaylist = (playlistId, playlistTitle) => {\r\n//       history.push(`/playlist/${match.params.id}?qty=${qty}/${playlistTitle}`);\r\n//     };\r\n//     const download = () => {\r\n//       window.location.href = newsitem.download;\r\n//     };\r\n \r\n//   return (\r\n//     <div>\r\n       \r\n//       <Link to=\"/\" className=\"btn btn-light my-3\">\r\n//         Go Back\r\n//       </Link>\r\n//       {loading ? (\r\n//         <Loader />\r\n//      ) : error ? ( \r\n//         <Message variant=\"danger\">{error}</Message>\r\n//      ) : ( \r\n//         <div>\r\n//           <Row>\r\n//           <Col sm={12} md={6} lg={4} xl={6} className=\"home-screen-product-col\">\r\n      \r\n//     <ListGroup>\r\n//       <Card>\r\n//         <ListGroup>\r\n//         <Image \r\n//   src={newsitem.image} \r\n//   alt={newsitem.headline} \r\n//   fluid \r\n//   className=\"float-md-end\" \r\n//   style={{ width: '1250px', height: '500px', objectFit: 'cover' }}\r\n// />        </ListGroup>\r\n//       </Card>\r\n\r\n   \r\n//     </ListGroup>\r\n \r\n  \r\n  \r\n//       <br />\r\n//       <br />\r\n//       <Card>\r\n//         <ListGroup>\r\n          \r\n     \r\n// </ListGroup>\r\n// </Card>\r\n// </Col>\r\n// <Col md={6}>\r\n//               <ListGroup variant=\"flush\">\r\n//                 <ListGroup.Item>\r\n//                   <h1>{newsitem.headline}</h1>\r\n//                 </ListGroup.Item>\r\n\r\n//                 <ListGroup.Item>\r\n//                   Description: {newsitem.description}\r\n                  \r\n     \r\n//                 </ListGroup.Item>\r\n\r\n\r\n//                 <ListGroup.Item>\r\n\r\n\r\n\r\n//                 </ListGroup.Item>\r\n//               </ListGroup>\r\n//             </Col>\r\n\r\n\r\n\r\n//             <Col md={6}>\r\n//               <ListGroup >\r\n\r\n//          {loadingOrders ? (\r\n//   <Loader /> \r\n// ) : errorOrders ? ( \r\n//   <Message variant='danger'>{errorOrders}</Message> \r\n// ) : ( \r\n//   orders.map(order => (\r\n\r\n    \r\n//     <div key={order.id}>\r\n     \r\n//       <h2>\r\n//       {order.isPremium && order.isBought && (\r\n//           <div>\r\n\r\n// <ListGroup.Item>\r\n// <div >\r\n// <Card>\r\n      \r\n//           <h2 className='text-center'> Comments</h2>\r\n//           {newsitem.reviews.length === 0 && <Message>No Comments</Message>}\r\n//           <ListGroup variant=\"flush\">\r\n//             {newsitem.reviews.map((review) => (\r\n//               <ListGroup.Item key={review._id}>\r\n//                 <h5>{review.name}</h5>\r\n//                 {/* <Rating value={review.rating} color={\"#f8e825\"} /> */}\r\n//                 <p>{review.createdAt.substring(0, 10)}</p>\r\n//                 <p>{review.comment}</p>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//             <ListGroup.Item>\r\n//               <h2>Write a Comment</h2>\r\n//               {successnewsReview && (\r\n//                 <Message variant=\"success\">\r\n//                   Comment submitted successfully\r\n//                 </Message>\r\n//               )}\r\n//               {loadingnewsReview && <Loader />}\r\n//               {errornewsReview && (\r\n//                 <Message variant=\"danger\">{errornewsReview}</Message>\r\n//               )}\r\n//               {userInfo ? (\r\n//                 <Form onSubmit={submitHandler}>\r\n//                   <Form.Group controlId=\"rating\">\r\n//                     {/* <Form.Label>Rating</Form.Label> */}\r\n//                     {/* <Form.Control\r\n//                       as=\"select\"\r\n//                       value={rating}\r\n//                       onChange={(e) => setRating(e.target.value)}\r\n//                     >\r\n//                       <option value=\"\">Select...</option>\r\n//                       <option value=\"1\">1 - Poor</option>\r\n//                       <option value=\"2\">2 - Fair</option>\r\n//                       <option value=\"3\">3 - Good</option>\r\n//                       <option value=\"4\">4 - Very Good</option>\r\n//                       <option value=\"5\">5 - Excellent</option>\r\n                    \r\n\r\n//                                                         </Form.Control> */}\r\n//                                                     </Form.Group>\r\n\r\n//                                                     <Form.Group controlId='comment'>\r\n//                                                         <Form.Label></Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             as='textarea'\r\n//                                                             row='5'\r\n//                                                             value={comment}\r\n//                                                             onChange={(e) => setComment(e.target.value)}\r\n//                                                         ></Form.Control>\r\n//                                                     </Form.Group>\r\n\r\n//                                                     <Button\r\n//                                                         disabled={loadingnewsReview}\r\n//                                                         type='submit'\r\n//                                                         variant='primary'\r\n//                                                     >\r\n//                                                         Submit\r\n//                                                     </Button>\r\n\r\n//                                                 </Form>\r\n//                                             ) : (\r\n//                                                     <Message variant='info'>Please <Link to='/login'>login</Link> to write a comment</Message>\r\n//                                                 )}\r\n//                                         </ListGroup.Item>\r\n//                                     </ListGroup>\r\n                              \r\n//       </Card>\r\n// </div>\r\n\r\n//             </ListGroup.Item>\r\n\r\n        \r\n\r\n//           </div>\r\n//         )}\r\n//       </h2>\r\n//     </div>\r\n//   ))\r\n\r\n  \r\n// )}\r\n\r\n        \r\n\r\n     \r\n//             </ListGroup>\r\n\r\n//         </Col>\r\n//       </Row>\r\n//     </div>\r\n//    )} \r\n// </div>\r\n\r\n// );\r\n// }\r\n\r\n// export default NewsScreen;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAIA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAGA;;AAIA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAGA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}