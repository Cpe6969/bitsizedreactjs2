{"ast":null,"code":"import axios from 'axios';\nimport { PLAYLIST_CREATE_REQUEST, PLAYLIST_CREATE_SUCCESS, PLAYLIST_CREATE_FAIL, PLAYLIST_LIST_REQUEST, PLAYLIST_LIST_SUCCESS, PLAYLIST_LIST_FAIL, PLAYLIST_DELETE_REQUEST, PLAYLIST_DELETE_SUCCESS, PLAYLIST_DELETE_FAIL } from '../constants/playlistConstants';\nexport const createPlaylist = playlist => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PLAYLIST_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const formData = new FormData();\n    formData.append('title', playlist.title);\n    formData.append('image', playlist.image);\n    formData.append('link', playlist.link);\n    const {\n      data\n    } = await axios.post(`https://bitesizedsite.pythonanywhere.com/api/playlists/create/`, formData, config);\n    dispatch({\n      type: PLAYLIST_CREATE_SUCCESS,\n      payload: data\n    });\n\n    // Retrieve the list of playlists and update the state\n    dispatch(listPlaylists());\n  } catch (error) {\n    dispatch({\n      type: PLAYLIST_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listPlaylists = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PLAYLIST_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/playlists/list/`, config);\n    dispatch({\n      type: PLAYLIST_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PLAYLIST_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deletePlaylist = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PLAYLIST_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`https://bitesizedsite.pythonanywhere.com/api/playlists/${id}/`, config);\n    dispatch({\n      type: PLAYLIST_DELETE_SUCCESS,\n      payload: id\n    });\n\n    // Retrieve the list of playlists and update the state\n    dispatch(listPlaylists());\n  } catch (error) {\n    dispatch({\n      type: PLAYLIST_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","PLAYLIST_CREATE_REQUEST","PLAYLIST_CREATE_SUCCESS","PLAYLIST_CREATE_FAIL","PLAYLIST_LIST_REQUEST","PLAYLIST_LIST_SUCCESS","PLAYLIST_LIST_FAIL","PLAYLIST_DELETE_REQUEST","PLAYLIST_DELETE_SUCCESS","PLAYLIST_DELETE_FAIL","createPlaylist","playlist","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","formData","FormData","append","title","image","link","data","post","payload","listPlaylists","error","response","detail","message","get","deletePlaylist","id","delete"],"sources":["C:/Users/franc/Desktop/bitesized-deploy-frontend/frontend/src/actions/playlistActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  PLAYLIST_CREATE_REQUEST,\r\n  PLAYLIST_CREATE_SUCCESS,\r\n  PLAYLIST_CREATE_FAIL,\r\n  PLAYLIST_LIST_REQUEST,\r\n  PLAYLIST_LIST_SUCCESS,\r\n  PLAYLIST_LIST_FAIL,\r\n  PLAYLIST_DELETE_REQUEST,\r\n  PLAYLIST_DELETE_SUCCESS,\r\n  PLAYLIST_DELETE_FAIL,\r\n} from '../constants/playlistConstants';\r\n\r\nexport const createPlaylist = (playlist) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PLAYLIST_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', playlist.title);\r\n    formData.append('image', playlist.image);\r\n    formData.append('link', playlist.link);\r\n\r\n\r\n    const { data } = await axios.post(`https://bitesizedsite.pythonanywhere.com/api/playlists/create/`, formData, config);\r\n\r\n    dispatch({ type: PLAYLIST_CREATE_SUCCESS, payload: data });\r\n\r\n    // Retrieve the list of playlists and update the state\r\n    dispatch(listPlaylists());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAYLIST_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listPlaylists = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PLAYLIST_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`https://bitesizedsite.pythonanywhere.com/api/playlists/list/`, config);\r\n\r\n    dispatch({ type: PLAYLIST_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAYLIST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePlaylist = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PLAYLIST_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`https://bitesizedsite.pythonanywhere.com/api/playlists/${id}/`, config);\r\n\r\n    dispatch({ type: PLAYLIST_DELETE_SUCCESS, payload: id });\r\n\r\n    // Retrieve the list of playlists and update the state\r\n    dispatch(listPlaylists());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PLAYLIST_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}